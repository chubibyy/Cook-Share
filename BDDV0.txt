Table users {
  id uuid [pk, default: "uuid"]
  email varchar [unique, not null]
  password varchar
  username varchar [unique]
  bio text
  avatar_url text
  cook_frequency varchar // ex quotidient, hebdo, occa 
  cook_constraints text[]  // ex: ["bio", "halal"]
  xp int [default: 0]
  is_private boolean //Compte privÃ©e ou public
  created_at timestamp [default: "now"]
  last_seen timestamp [default: "now"]

}

Table cooking_sessions {
  id uuid [pk, default: "uuid"]
  user_id uuid [ref: > users.id]
  club_id uuid [ref: > clubs.id]        // ðŸ†• facultatif â€” sâ€™il est liÃ© Ã  un club
  title varchar
  photo_url text
  ingredients text[]
  duration int
  cuisine_type varchar []
  difficulty int
  tags text[]
  created_at timestamp [default: "now"]
}

Table challenges {
  id uuid [pk, default: "uuid"]
  title varchar
  challenge_img text //Image de mÃ©daille
  description text
  constraint_text varchar         // ex: "5 ingrÃ©dients max"
  start_date date
  end_date date
  reward_xp int [default: 100]    // XP Ã  gagner si le dÃ©fi est rÃ©ussi
  created_by uuid [ref: > users.id]
}

Table challenge_participants {
  id uuid [pk, default: "uuid"]
  challenge_id uuid [ref: > challenges.id]
  user_id uuid [ref: > users.id]
  status varchar //Reussi, en cours, Ã©chouÃ©
  session_id uuid [ref: > cooking_sessions.id]
  created_at timestamp [default: "now"]
}

Table followers {
  id uuid [pk, default: "uuid"]
  follower_id uuid [ref: > users.id]     // Celui qui suit
  followed_id uuid [ref: > users.id]     // Celui qui est suivi
  created_at timestamp [default: "now"]
}

Table friend_requests {
  id uuid [pk, default: "uuid"]
  sender_id uuid [ref: > users.id]
  receiver_id uuid [ref: > users.id]
  status varchar  // "pending", "accepted", "rejected"
  created_at timestamp [default: "now"]
}

Table likes {
  id uuid [pk, default: "uuid"]
  user_id uuid [ref: > users.id]
  session_id uuid [ref: > cooking_sessions.id]
  created_at timestamp [default: "now"]
}

Table comments {
  id uuid [pk, default: "uuid"]
  user_id uuid [ref: > users.id]
  session_id uuid [ref: > cooking_sessions.id]
  content text
  parent_id uuid [ref: > comments.id] // commentaire en rÃ©ponse Ã  un autre
  created_at timestamp [default: "now"]
}

Table notifications {
  id uuid [pk, default: "uuid"]
  user_id uuid [ref: > users.id]       // destinataire
  type varchar                         // "like", "comment", "challenge", etc.
  source_user_id uuid [ref: > users.id] // optionnel (auteur du like, commentaireâ€¦)
  message text                         // ex: "Emma a aimÃ© ton plat"
  is_read boolean [default: false]
  created_at timestamp [default: "now"]
}

Table saved_sessions {
  id uuid [pk, default: "uuid"]
  user_id uuid [ref: > users.id]
  session_id uuid [ref: > cooking_sessions.id]
  created_at timestamp [default: "now"]
}

Table messages {
  id uuid [pk, default: "uuid"]
  sender_id uuid [ref: > users.id]
  receiver_id uuid [ref: > users.id]
  content text
  is_read boolean [default: false]
  created_at timestamp [default: "now"]
}

Table clubs {
  id uuid [pk, default: "uuid"]
  name varchar
  description text
  avatar_url text         // icÃ´ne ou image du club
  is_private boolean [default: false]  // club public ou sur invitation
  created_by uuid [ref: > users.id]
  created_at timestamp [default: "now"]
}

Table club_members {
  id uuid [pk, default: "uuid"]
  club_id uuid [ref: > clubs.id]
  user_id uuid [ref: > users.id]
  role varchar // "admin", "member", "moderator" (si besoin)
  joined_at timestamp [default: "now"]
}
Table club_challenges {
  id uuid [pk, default: "uuid"]
  club_id uuid [ref: > clubs.id]
  challenge_id uuid [ref: > challenges.id]
  created_at timestamp [default: "now"]
}





